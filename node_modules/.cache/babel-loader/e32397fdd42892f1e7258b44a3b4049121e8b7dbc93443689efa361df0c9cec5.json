{"ast":null,"code":"import _slicedToArray from \"/Users/mc/mc217.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useEffect, useMemo } from 'react';\nimport makeCancellable from 'make-cancellable-promise';\nimport invariant from 'tiny-invariant';\nimport warning from 'tiny-warning';\nimport pdfjs from '../pdfjs.js';\nimport usePageContext from '../shared/hooks/usePageContext.js';\nimport useResolver from '../shared/hooks/useResolver.js';\nimport { cancelRunningTask, isCancelException, makePageCallback } from '../shared/utils.js';\nexport default function PageSVG() {\n  var pageContext = usePageContext();\n  invariant(pageContext, 'Unable to find Page context.');\n  var _className = pageContext._className,\n    onRenderSuccessProps = pageContext.onRenderSuccess,\n    onRenderErrorProps = pageContext.onRenderError,\n    page = pageContext.page,\n    rotate = pageContext.rotate,\n    scale = pageContext.scale;\n  invariant(page, 'Attempted to render page SVG, but no page was specified.');\n  var _useResolver = useResolver(),\n    _useResolver2 = _slicedToArray(_useResolver, 2),\n    svgState = _useResolver2[0],\n    svgDispatch = _useResolver2[1];\n  var svg = svgState.value,\n    svgError = svgState.error;\n  /**\n   * Called when a page is rendered successfully\n   */\n  function onRenderSuccess() {\n    if (!page) {\n      // Impossible, but TypeScript doesn't know that\n      return;\n    }\n    if (onRenderSuccessProps) {\n      onRenderSuccessProps(makePageCallback(page, scale));\n    }\n  }\n  /**\n   * Called when a page fails to render\n   */\n  function onRenderError() {\n    if (!svgError) {\n      // Impossible, but TypeScript doesn't know that\n      return;\n    }\n    if (isCancelException(svgError)) {\n      return;\n    }\n    warning(false, svgError.toString());\n    if (onRenderErrorProps) {\n      onRenderErrorProps(svgError);\n    }\n  }\n  var viewport = useMemo(function () {\n    return page.getViewport({\n      scale: scale,\n      rotation: rotate\n    });\n  }, [page, rotate, scale]);\n  function resetSVG() {\n    svgDispatch({\n      type: 'RESET'\n    });\n  }\n  useEffect(resetSVG, [page, svgDispatch, viewport]);\n  function renderSVG() {\n    if (!page) {\n      return;\n    }\n    var cancellable = makeCancellable(page.getOperatorList());\n    cancellable.promise.then(function (operatorList) {\n      var svgGfx = new pdfjs.SVGGraphics(page.commonObjs, page.objs);\n      svgGfx.getSVG(operatorList, viewport).then(function (nextSvg) {\n        // See https://github.com/mozilla/pdf.js/issues/16745\n        if (!(nextSvg instanceof SVGElement)) {\n          throw new Error('getSVG returned unexpected result.');\n        }\n        svgDispatch({\n          type: 'RESOLVE',\n          value: nextSvg\n        });\n      }).catch(function (error) {\n        svgDispatch({\n          type: 'REJECT',\n          error: error\n        });\n      });\n    }).catch(function (error) {\n      svgDispatch({\n        type: 'REJECT',\n        error: error\n      });\n    });\n    return function () {\n      return cancelRunningTask(cancellable);\n    };\n  }\n  useEffect(renderSVG, [page, svgDispatch, viewport]);\n  useEffect(function () {\n    if (svg === undefined) {\n      return;\n    }\n    if (svg === false) {\n      onRenderError();\n      return;\n    }\n    onRenderSuccess();\n  },\n  // Ommitted callbacks so they are not called every time they change\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [svg]);\n  function drawPageOnContainer(element) {\n    if (!element || !svg) {\n      return;\n    }\n    // Append SVG element to the main container, if this hasn't been done already\n    if (!element.firstElementChild) {\n      element.appendChild(svg);\n    }\n    var width = viewport.width,\n      height = viewport.height;\n    svg.setAttribute('width', \"\".concat(width));\n    svg.setAttribute('height', \"\".concat(height));\n  }\n  var width = viewport.width,\n    height = viewport.height;\n  return React.createElement(\"div\", {\n    className: \"\".concat(_className, \"__svg\"),\n    // Note: This cannot be shortened, as we need this function to be called with each render.\n    ref: function ref(_ref) {\n      return drawPageOnContainer(_ref);\n    },\n    style: {\n      display: 'block',\n      backgroundColor: 'white',\n      overflow: 'hidden',\n      width: width,\n      height: height,\n      userSelect: 'none'\n    }\n  });\n}","map":{"version":3,"names":["React","useEffect","useMemo","makeCancellable","invariant","warning","pdfjs","usePageContext","useResolver","cancelRunningTask","isCancelException","makePageCallback","PageSVG","pageContext","_className","onRenderSuccessProps","onRenderSuccess","onRenderErrorProps","onRenderError","page","rotate","scale","_useResolver","_useResolver2","_slicedToArray","svgState","svgDispatch","svg","value","svgError","error","toString","viewport","getViewport","rotation","resetSVG","type","renderSVG","cancellable","getOperatorList","promise","then","operatorList","svgGfx","SVGGraphics","commonObjs","objs","getSVG","nextSvg","SVGElement","Error","catch","undefined","drawPageOnContainer","element","firstElementChild","appendChild","width","height","setAttribute","concat","createElement","className","ref","style","display","backgroundColor","overflow","userSelect"],"sources":["/Users/mc/mc217.github.io/node_modules/react-pdf/dist/esm/Page/PageSVG.js"],"sourcesContent":["import React, { useEffect, useMemo } from 'react';\nimport makeCancellable from 'make-cancellable-promise';\nimport invariant from 'tiny-invariant';\nimport warning from 'tiny-warning';\nimport pdfjs from '../pdfjs.js';\nimport usePageContext from '../shared/hooks/usePageContext.js';\nimport useResolver from '../shared/hooks/useResolver.js';\nimport { cancelRunningTask, isCancelException, makePageCallback } from '../shared/utils.js';\nexport default function PageSVG() {\n    const pageContext = usePageContext();\n    invariant(pageContext, 'Unable to find Page context.');\n    const { _className, onRenderSuccess: onRenderSuccessProps, onRenderError: onRenderErrorProps, page, rotate, scale, } = pageContext;\n    invariant(page, 'Attempted to render page SVG, but no page was specified.');\n    const [svgState, svgDispatch] = useResolver();\n    const { value: svg, error: svgError } = svgState;\n    /**\n     * Called when a page is rendered successfully\n     */\n    function onRenderSuccess() {\n        if (!page) {\n            // Impossible, but TypeScript doesn't know that\n            return;\n        }\n        if (onRenderSuccessProps) {\n            onRenderSuccessProps(makePageCallback(page, scale));\n        }\n    }\n    /**\n     * Called when a page fails to render\n     */\n    function onRenderError() {\n        if (!svgError) {\n            // Impossible, but TypeScript doesn't know that\n            return;\n        }\n        if (isCancelException(svgError)) {\n            return;\n        }\n        warning(false, svgError.toString());\n        if (onRenderErrorProps) {\n            onRenderErrorProps(svgError);\n        }\n    }\n    const viewport = useMemo(() => page.getViewport({ scale, rotation: rotate }), [page, rotate, scale]);\n    function resetSVG() {\n        svgDispatch({ type: 'RESET' });\n    }\n    useEffect(resetSVG, [page, svgDispatch, viewport]);\n    function renderSVG() {\n        if (!page) {\n            return;\n        }\n        const cancellable = makeCancellable(page.getOperatorList());\n        cancellable.promise\n            .then((operatorList) => {\n            const svgGfx = new pdfjs.SVGGraphics(page.commonObjs, page.objs);\n            svgGfx\n                .getSVG(operatorList, viewport)\n                .then((nextSvg) => {\n                // See https://github.com/mozilla/pdf.js/issues/16745\n                if (!(nextSvg instanceof SVGElement)) {\n                    throw new Error('getSVG returned unexpected result.');\n                }\n                svgDispatch({ type: 'RESOLVE', value: nextSvg });\n            })\n                .catch((error) => {\n                svgDispatch({ type: 'REJECT', error });\n            });\n        })\n            .catch((error) => {\n            svgDispatch({ type: 'REJECT', error });\n        });\n        return () => cancelRunningTask(cancellable);\n    }\n    useEffect(renderSVG, [page, svgDispatch, viewport]);\n    useEffect(() => {\n        if (svg === undefined) {\n            return;\n        }\n        if (svg === false) {\n            onRenderError();\n            return;\n        }\n        onRenderSuccess();\n    }, \n    // Ommitted callbacks so they are not called every time they change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [svg]);\n    function drawPageOnContainer(element) {\n        if (!element || !svg) {\n            return;\n        }\n        // Append SVG element to the main container, if this hasn't been done already\n        if (!element.firstElementChild) {\n            element.appendChild(svg);\n        }\n        const { width, height } = viewport;\n        svg.setAttribute('width', `${width}`);\n        svg.setAttribute('height', `${height}`);\n    }\n    const { width, height } = viewport;\n    return (React.createElement(\"div\", { className: `${_className}__svg`, \n        // Note: This cannot be shortened, as we need this function to be called with each render.\n        ref: (ref) => drawPageOnContainer(ref), style: {\n            display: 'block',\n            backgroundColor: 'white',\n            overflow: 'hidden',\n            width,\n            height,\n            userSelect: 'none',\n        } }));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}